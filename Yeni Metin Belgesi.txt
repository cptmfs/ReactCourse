using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;



class Result
{

    /*
     * Complete the 'maximumNetworks' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY speed
     *  2. INTEGER minComps
     *  3. LONG_INTEGER speedThreshold
     */

    public static int maximumNetworks(List<int> speed, int minComps, long speedThreshold)
    {

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int speedCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> speed = new List<int>();

        for (int i = 0; i < speedCount; i++)
        {
            int speedItem = Convert.ToInt32(Console.ReadLine().Trim());
            speed.Add(speedItem);
        }

        int minComps = Convert.ToInt32(Console.ReadLine().Trim());

        long speedThreshold = Convert.ToInt64(Console.ReadLine().Trim());

        int result = Result.maximumNetworks(speed, minComps, speedThreshold);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}



2. Network Formation
A software development company is working to create several shared computing systems throughout an office.

 

For computers to be on the same network, there are the following constraints:

They must be adjacent to one another.
There must be a minimum number of computers.
The total processing speed of the network (the sum of each computer's processing speed) must be at least a certain threshold.
A computer can only belong to one network.
 

Given the processing speeds and order of the computers, as well as the network constraints, determine the maximum number of networks that can be formed.

 

Example

n = 6

speed = [5, 7, 9, 12, 10, 13]

minComps = 2 

speedThreshold = 15

 

There are n = 6 computers. Each network needs to have a minimum of minComps = 2 computers and a total processing speed of at least speedThreshold = 15.

The first network includes the second, third, and fourth computers, which results in a total processing speed of 7+9+12 = 28. This is above the threshold of 15.
The second network includes the fifth and sixth computers, with a total processing speed of 10+13 = 23.
 

The maximum number of networks that can be formed is 2.

 

Function Description

Complete the function maximumNetworks in the editor.

 

maximumNetworks has the following parameter(s):

    int speed[n]:  speed[i] denotes the processing speed of the ith computer

    int minComps: the minimum number of computers each network must have

    long speedThreshold: the minimum total processing speed a network must have

 

Returns

    int: the maximum number of networks that can be formed from the computers

 

Constraints

1 ≤ n ≤ 105

1 ≤ speed[i] ≤ 109

1 ≤ minComps ≤ n

1 ≤ speedThreshold ≤ 1014

 


